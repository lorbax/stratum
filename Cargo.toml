name = "stratum_v2"
version = "0.0.0"
authors = ["The Stratum v2 Developers"]
edition = "2021"
rust-version = "1.65.0"
description = "The Stratum protocol defines how miners, proxies, and pools communicate to contribute hashrate to the Bitcoin network. Stratum v2 is a robust set of primitives which anyone can use to expand the protocol or implement a role."
documentation = "https://github.com/stratum-mining/stratum"
readme = "README.md"
homepage = "https://stratumprotocol.org"
repository = "https://github.com/stratum-mining/stratum"
license = "MIT + Apache-2.0"
license-file = "LICENSE.md"
keywords = ["stratum", "mining", "bitcoin", "protocol"]

[workspace]

members = [
    "protocols/v1",
    "protocols/v2/binary-sv2/serde-sv2",
    "protocols/v2/binary-sv2/no-serde-sv2/codec",
    "protocols/v2/binary-sv2/no-serde-sv2/derive_codec",
    "protocols/v2/binary-sv2/binary-sv2",
    "protocols/v2/noise-sv2",
    "protocols/v2/framing-sv2",
    "protocols/v2/codec-sv2",
    "protocols/v2/const-sv2",
    "protocols/v2/subprotocols/common-messages",
    "protocols/v2/subprotocols/template-distribution",
    "protocols/v2/subprotocols/mining",
    "protocols/v2/subprotocols/job-declaration",
    "protocols/v2/sv2-ffi",
    "protocols/v2/roles-logic-sv2",
    "roles/mining-proxy",
    "roles/pool",
    "roles/test-utils/mining-device",
    "roles/test-utils/sv1-mining-device",
    "roles/translator",
    "test/scale",
    "roles/jd-client",
    "roles/jd-server",
    "utils/network-helpers",
    "utils/buffer",
    "utils/error-handling",
    "examples/sv1-client-and-server",
    "examples/ping-pong-with-noise",
    "examples/ping-pong-without-noise",
    "examples/interop-cpp",
    "examples/interop-cpp/template-provider/example-of-guix-build/quickcheck",
    "examples/interop-cpp/template-provider/example-of-guix-build/quickcheck_macros",
    "examples/template-provider-test",
    "experimental/coinbase-negotiator",
    "vendored/rust-jsonrpc"
]

exclude = [
    "utils/message-generator",
    "benches",
]

[profile.dev]
# Required by super_safe_lock
opt-level = 1

[profile.test]
# Required by super_safe_lock
opt-level = 1
